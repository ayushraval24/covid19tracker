{"version":3,"sources":["Components/Api.jsx","Components/Cards.jsx","Components/CountryPicker.jsx","Components/image.png","App.js","index.js"],"names":["baseUrl","fetchData","country","a","changeUrl","error","console","log","axios","get","data","fetchCountries","countries","map","name","Cards","confirmed","recovered","deaths","lastUpdate","className","Grid","container","justify","spacing","item","component","Card","xs","md","cx","CardContent","Typography","start","end","value","duration","separator","Date","toDateString","CountryPicker","handleCountryChange","useState","fetchAllCountries","setFetchCountries","useEffect","fetchApi","FormControl","NativeSelect","defaultValue","onChange","e","target","i","App","state","setState","getData","fetchedData","src","img","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0c6ff781.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst baseUrl = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeUrl = baseUrl;\r\n    try {\r\n        if (country) {\r\n            changeUrl = `${baseUrl}/countries/${country}`\r\n        }\r\n    } catch (error) {\r\n        console.log(\"error\")\r\n    }\r\n\r\n    try {\r\n        const { data } = await axios.get(changeUrl);\r\n        return data;\r\n    } catch (error) {\r\n        console.log(\"error\")\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const { data: { countries } } = await axios.get(`${baseUrl}/countries`);\r\n        return countries.map((country) => country.name);\r\n    } catch (error) {\r\n        console.log(\"error\")\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport './Cards.css'\r\nimport cx from 'classnames';\r\nimport Count from 'react-countup';\r\nimport { Card, CardContent, Grid, Typography } from '@material-ui/core';\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n\r\n    if (!confirmed || !recovered || !deaths) {\r\n        return \"Loading...\"\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Grid container justify=\"center\" spacing={3}>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(\"card\", \"infected\")}>\r\n                    <CardContent>\r\n                        <Typography>Infected</Typography>\r\n                        <Typography>\r\n                            <Count start={0} end={confirmed.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography>Number of active cases of COVID19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(\"card\", \"recovered\")}>\r\n                    <CardContent>\r\n                        <Typography>Recovered</Typography>\r\n                        <Typography>\r\n                            <Count start={0} end={recovered.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography>Number of recoveries cases of COVID19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(\"card\", \"dead\")}>\r\n                    <CardContent>\r\n                        <Typography>Deaths</Typography>\r\n                        <Typography>\r\n                            <Count start={0} end={deaths.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography>Number of deaths because of COVID19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\nimport { fetchCountries } from './Api'\r\nimport './CountryPicker.css'\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n\r\n    const [fetchAllCountries, setFetchCountries] = useState([])\r\n\r\n    useEffect(() => {\r\n        const fetchApi = async () => {\r\n            let data = await fetchCountries()\r\n            setFetchCountries(data)\r\n        }\r\n\r\n        fetchApi();\r\n    }, [setFetchCountries])\r\n\r\n    return (\r\n        <FormControl className=\"formControl\">\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => { handleCountryChange(e.target.value) }}>\r\n                <option value=\"[country]\">Global</option>\r\n                {fetchAllCountries.map((country, i) => <option value={country} key={i}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker","export default __webpack_public_path__ + \"static/media/image.9e5d4fc7.png\";","import React, { useEffect, useState } from 'react'\nimport './App.css';\nimport { fetchData, fetchCountries } from './Components/Api.jsx'\nimport Cards from './Components/Cards.jsx'\nimport CountryPicker from './Components/CountryPicker.jsx'\nimport img from './Components/image.png'\n\nconst App = () => {\n\n  const [state, setState] = useState({\n    data: {},\n    country: \"\"\n  })\n\n  const getData = async () => {\n    const fetchedData = await fetchData();\n    setState({ data: fetchedData })\n  }\n\n  useEffect(getData, [])\n\n  const handleCountryChange = async (country) => {\n    const fetchedData = await fetchData(country);\n    setState({ data: fetchedData, country: country })\n  }\n\n  return (\n    <div className=\"container\">\n      <img src={img}></img>\n      <Cards data={state.data} />\n      <CountryPicker handleCountryChange={handleCountryChange} />\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}